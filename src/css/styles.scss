@use 'variables';
@use 'mixins';
@use 'inheritance';
@import "flatpickr/dist/flatpickr.css";

/*Focus*/
    *:focus {
        outline: 0;
    }

/*Body*/
    html, body {
        height: 100%;
        margin: 0;
    }    
    body {
        background: variables.$bg-color;
        color: variables.$text-color;
        font-family: variables.$main-font;
    }
    .invisible {
        display: none;
    }

/*Containers*/
    .site-wrapper {
        @extend %flex;
        flex-direction: column;
        min-height: 100vh;
        width: 95%;
        margin: 30px auto;
    }

/*Main*/
    main {
        flex: 1;
        margin-top: 30px;
    }
    section h1 {
        font-size: 2em;
        margin-bottom: 40px;
    }

/*Text Styles*/
    .sr-only {
        border: 0;
        clip: rect(0,0,0,0);
        height: 1px;
        margin: -1px;
        overflow: hidden;
        padding: 0;
        position: absolute;
        width: 1px;
    }    
    .center-text {
        text-align: center;
    }
    .uppercase {
        @include mixins.uppercase();
    }
    a {    
        color: variables.$text-color;
        text-decoration: none;
    }
    p {
        font-family: variables.$sub-font;
    }

/*Icons*/
    form:not([data-popup]) .material-icons {
        color: #FFF;
    }
    .material-icons {
        vertical-align: middle;
    }

    /*Mat Progress Spinner*/
        .mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] {
            height: 32px !important;
            width: 32px !important;

            svg {
                height: 32px !important;
                width: 32px !important;
            }
        }
        .mat-progress-spinner circle, .mat-spinner circle {
            stroke: #FFF;
        }

/*Details Element*/
    form summary {
        margin: 50px 0 40px 0;
        @include mixins.uppercase();
    }
    [data-popup] summary {
        margin: 20px 0;
    }
/*Buttons*/
    button {
        cursor: pointer;
        @include mixins.uppercase();
        font-family: variables.$main-font;
    }
    .btn-animate {
        box-sizing: border-box;
        // Using inset box-shadow instead of border for sizing simplicity
        box-shadow: inset 0 0 0 1px variables.$btn;
        color: #FFF;
        font-size: inherit;

        // Required, since we're setting absolute on pseudo-elements
        position: relative;
        vertical-align: middle;

        &::before, &::after {
            box-sizing: inherit;
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
        }
    }
    .btn-animate-center {
        // Set up base styles, we're going to scale instead of animating width/height
        &::before, &::after {
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            transform-origin: center; // Ensure scaling is done from the center (expands outwards)
        }
        // scale3d(<scale-horizontal>, <scale-vertical>, <scale-depth>);
        &::before {
            border-top: 1px solid variables.$btn-hover;
            border-bottom: 1px solid variables.$btn-hover;
            transform: scale3d(0,1,1); // Shrink only width
        }
        &::after {
            border-left: 1px solid variables.$btn-hover;
            border-right: 1px solid variables.$btn-hover;
            transform: scale3d(1,0,1); // Shrink only height
        }
        &:hover::before,&:hover::after {
            transform: scale3d(1,1,1); // Show full-size
            transition: transform 0.5s;
        }
    }

/*Forms*/    
    /*Form Wrappers*/
        form.half-width {
            input:not([type=checkbox]):not([type=radio]), select, textarea, [type=submit] {
                width: 50vw;
            }
            .flatpickr input {
                width: 400px !important;
            }
            [type=submit] {
                height: 50px;
            }
        }
        form.vertical > *, form > div, form label {
            display: block;
            margin-bottom: 30px;
        }
        form.flex > div {
            margin-right: 100px;
        }
        .form-input {
            input {
                width: 240px !important;
            }
            input:first-of-type {
                margin-right: 20px;
            }
        }
    
    /*Form Elements*/
        ::placeholder {
            color: #D8D8D8;
            font-family: variables.$main-font;
            opacity: 0.8;
            text-align: left;
            @include mixins.uppercase();
        }
        button, input, select, textarea {
            background: none;
            border: 0;
        }
        input, select, textarea {
            color: silver;
            font: 400 .98em variables.$sub-font;
        }
        form label {            
            margin-bottom: 25px;
            @include mixins.uppercase();

            i {
                margin-left: 10px;
            }
            [type=checkbox] {
                margin-right: 10px;
            }
        }
        form input, form select, form textarea {
            border-bottom: 1px solid silver;
            padding: 4px 0;
        }
        form input:not([type=checkbox]):not([type=radio]), form select, form textarea, form [type=submit] {
            width: 100%;
        }    
        form select option, textarea {
            text-transform: initial;
        }
        form input[type=checkbox] {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            border: 1.5px solid;
            border-radius: 3px;
            width: 14px;
            height: 14px;
            vertical-align: bottom;
        }
        form input[type=checkbox][ng-reflect-model=true], form input[type=checkbox]:checked, form input[type=checkbox]:focus-visible, form input[type=checkbox]:hover {
            border-color: variables.$btn-hover;
        }
        form input:not([type=submit]) {
            text-indent: 5px;
        }
        .select-wrapper {
            margin: 45px 0;
        }
        form select {
            height: 28px;
            min-width: 150px;
            @include mixins.uppercase();
        }
        form select option:not(:disabled) {
            color: #000;
            font: .93em variables.$sub-font;
        }
        form textarea {
            height: 120px;
            resize: none;
        }
        .flatpickr-current-month span.cur-month:hover {
            background: initial;
        }
        .flatpickr input {
            width: 300px !important;
        }
        form:not([data-popup]) .horizontal-wrapper {
            width: 218px;
            
            div {
                border-bottom: .5px solid rgba(255, 255, 255, 0.5) !important;
                border-left: 0;
                border-right: 0;
            }
        }
        form:not([data-popup]) .wrapper button svg {
            fill: #FFF !important;
        } 
        form [type=submit] {
            font-family: variables.$main-font;
            font-size: 1.05em;
            height: 45px;
            margin-top: 35px;
            @include mixins.uppercase();
        }

        /*Popup Forms*/
        .popup-form {
            position: relative;
        }
        .popup-form .form-body {
            position: absolute;
            left: 0;
            right: 0;
            top: calc(100% - 1px);
            max-height: 400px;
            width: 600px;
            overflow-y: auto;
            background: #FFF;
            color: #000;
            padding: 20px 15px;
            z-index: 1;

            .wrapper {
                margin-left: 20px;
            }
        }
        .readonly {            
            position: relative;
            margin: 0;
            padding: 0;
        }
        .readonly input {
            width: 200px;
            @include mixins.uppercase();
        }
        [class^="caret"] {
            display: inline-block;
            position: absolute;
            top: 30%;
            right: 0;
            width: 0;
            height: 0;
            border: solid silver;
            border-width: 0 2px 2px 0;
            padding: 2.5px;
        }
        .caret-down {
            transform: rotate(45deg);
            -webkit-transform: rotate(45deg);
        }

        /* spinner animation - source: loading.io */
.lds-ring {
    display: inline-block;
    position: relative;
    width: 80px;
    height: 80px;
  }
  .lds-ring div {
    box-sizing: border-box;
    display: block;
    position: absolute;
    width: 64px;
    height: 64px;
    margin: 8px;
    border: 8px solid #333;
    border-radius: 50%;
    animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
    border-color: #333 transparent transparent transparent;
  }
  .lds-ring div:nth-child(1) {
    animation-delay: -0.45s;
  }
  .lds-ring div:nth-child(2) {
    animation-delay: -0.3s;
  }
  .lds-ring div:nth-child(3) {
    animation-delay: -0.15s;
  }
  @keyframes lds-ring {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  
  
  /* LoadingDirective overlay styles */
  .loading-overlay {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
    background: white;
    opacity: 0.7;
    z-index: 10000;
  }
  